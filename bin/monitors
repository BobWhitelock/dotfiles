#!/usr/bin/env python3

import argparse
import re
import subprocess

# TODO add verbose?
# add desktop
# add global args

LAPTOP_TYPE = 'laptop'
DESKTOP_TYPE = 'desktop'

LAPTOP_DUAL_ACTION = 'dual'
LAPTOP_SINGLE_ACTION = 'single'

OUTPUT_ACTION_OFF = 'off'


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('type', type=str)
    parser.add_argument('action', type=str)

    args = parser.parse_args()

    if args.type == LAPTOP_TYPE:
        handle_laptop_action(args.action)
    elif args.type == DESKTOP_TYPE:
        handle_desktop_action(args.action)
    else:
        handle_output_action(args.type, args.action)


def handle_laptop_action(action):
    if action == LAPTOP_DUAL_ACTION:
        run_bash_command('xrandr --output eDP1 --mode 1360x768 --left-of HDMI1 --output HDMI1 --auto')
    elif action == LAPTOP_SINGLE_ACTION:
        run_bash_command('xrandr --output eDP1 --auto --output HDMI1 --off')


def handle_desktop_action(action):
    print("Not done yet")


def handle_output_action(output_type, action):
    xrandr_lines = run_bash_command('xrandr').split('\n')
    matching_output_lines = [line for line in xrandr_lines if len(line) > 0 and re.match('^' + output_type, line, re.I)]

    if action == OUTPUT_ACTION_OFF:
        for output_line in matching_output_lines:
            output = output_line.split()[0]
            run_bash_command('xrandr --output {} --off'.format(output))


def run_bash_command(command):
    # print(command)
    return subprocess.check_output(command.split(), universal_newlines=True)


if __name__ == '__main__':
    main()



# run_bash_command('conky &')



