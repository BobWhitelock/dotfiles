
# Remap prefix to C-q.
set -g prefix C-q
unbind C-b

# Status bar at top.
set-option -g status-position top

# Use Vi mode and various Vim-like bindings.
set-window-option -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Don't rename windows with running program.
set-option -g allow-rename off

# Make new windows/panes use current pane's working directory, rather than
# directory tmux started from.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Use 256 colours.
set -g default-terminal "screen-256color"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Clear screen with <prefix>C-l - sends prefix if in Vim so it can handle this
# appropriately.
bind C-l if-shell "$is_vim" "send-keys C-q" "send-keys C-l"
